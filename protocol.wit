package example:protocol;

interface host-imports {
  print-line: func(msg: string);
}

interface guest-exports {
  run: func();
}

world my-world {
  record point {
    x: s32,
    y: s32,
  }

  import host-imports;
  export guest-exports;

  import inline-imports: interface {
    add-one: func(num: s32) -> s32;
  }
  export inline-exports: interface {
    add-three: func(num: s32) -> s32;
  }

  import singlewordimports: interface {
    sub-one: func(num: s32) -> s32;
  }
  export singlewordexports: interface {
    sub-three: func(num: s32) -> s32;
  }

  import import-point: func(pnt: point) -> point;
  export move-point: func(pnt: point) -> point;

  export increment: func() -> s32;

  export sqrt: func(num: float32) -> result<float32, string>;

  flags permissions {
    read,
    write,
    exec,
  }

  flags many-flags {
    f00,
    f01,
    f02,
    f03,
    f04,
    f05,
    f06,
    f07,
    f08,
    f09,
    f10,
    f11,
    f12,
    f13,
    f14,
    f15,
    f16,
    f17,
    f18,
    f19,
    f20,
    f21,
    f22,
    f23,
    f24,
    f25,
    f26,
    f27,
    f28,
    f29,
    f30,
    f31,
    f32,
    // f33,
    // f34,
    // f35,
    // f36,
    // f37,
    // f38,
    // f39,
    // f40,
    // f41,
    // f42,
    // f43,
    // f44,
    // f45,
    // f46,
    // f47,
    // f48,
    // f49,
    // f50,
    // f51,
    // f52,
    // f53,
    // f54,
    // f55,
    // f56,
    // f57,
    // f58,
    // f59,
    // f60,
    // f61,
    // f62,
    // f63,
    // f64,
    // f65,
    // f66,
    // f67,
    // f68,
    // f69,
  }

  export export-flags: func() -> permissions;
  export export-many-flags: func() -> many-flags;
}
